# Phase 4
	1. Create folder called "Api" inside the "Controller" folder.
	2. Then create Web API 2 Controller class.
	3. After you created it, you get readme file to how to configure web API.
	4. To complete the third option of readme file, you need to open Global.asax file and add readme given line to Global file.
		i) To configure those without errors you have to install "Install-Package Microsoft.AspNet.WebApi.WebHost" using package manager console.
	5. After applying api CRUDs, you can test it by using https://localhost:<port>/api/customers
	
# Phase 5
	1. The "Postman API client" browser extension only available for the Chrome. For Firefox we can use the "RESTClient" extention.
	2. To POST data using the "RESTClient", click on Headers/Custom Header. Then give Content-type as Name and application/json as attribute value. 

# Phase 7
	1. To map Data transfer objects of customer (CustomerDto.cs) we use "Auto Mapper" function.
	2. To install Auto Mapper package, go to package manager shell and type "install-package automapper -version:4.1"
	3. Before begin mapping we need to creat mapping profile. Therefore, create class called "MappingProfile" inside "App_Start" folder.
	4. Now add mapper configurations to Global.asax class.
	
# Phase 8
	1. By activating Camel Notations we can convert our json variables from Capital letters to simple letters.
	
		Ex -:  // Before Camel Notation
			  {
				"Id": 1,
				"Name": "John Smith",
			  },
			  
			  // After Camel Notation
			  {
				"id": 1,
				"name": "John Smith",
			  },


Below places must concern when we do this Section
	1. Controllers/Api
		i) CustomersController.cs
		ii) readme.txt
	
	2. Global.asax
	
	3. Dtos (Data Transfer Objects)
		i) CustomerDto.cs
	
	4. App_Start
		i) MappingProfile.cs
		ii) WebApiConfig.cs
